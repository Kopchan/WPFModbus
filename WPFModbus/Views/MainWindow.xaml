<Window x:Class="WPFModbus.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFModbus.Views"
        mc:Ignorable="d"
        Title="WPFModbus" 
        Height="400" Width="400"
        MinHeight="300" MinWidth="300"
        Closing="Window_Closing" SourceInitialized="Window_SourceInitialized">
    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="Transparent">
            <MenuItem Header="_Файл">
                <MenuItem Header="_Загрузить ввод из файла" ></MenuItem>
                <MenuItem Header="_Выход" Click="Exit_MI_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Подключение">
                <MenuItem Header="_Настройка COM порта..." Click="OpenPortSettings"/>
                <MenuItem x:Name="ConnectionSwitch_MI" Click="ConnectionSwitch_MI_Click">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="_Отключиться"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PortIsOpen}" Value="False">
                                    <Setter Property="Header" Value="_Подключиться"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Вид">
                <MenuItem Header="Авто">
                    <MenuItem.Icon>
                        <RadioButton GroupName="View" HorizontalAlignment="Center"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Компактное">
                    <MenuItem.Icon>
                        <RadioButton GroupName="View" HorizontalAlignment="Center"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Две колонки">
                    <MenuItem.Icon>
                        <RadioButton GroupName="View" HorizontalAlignment="Center"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom" Background="Transparent" Margin="5 0">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="10" Height="10" Margin="0 0 5 0">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Fill" Value="Red"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PortIsOpen}" Value="True">
                                        <Setter Property="Fill" Value="Green"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <TextBlock Text="{Binding Port.PortName}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.BaudRate}"/>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.DataBits}"/>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.Parity}"/>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.StopBits}"/>
            <!-- TODO: Локализировать статус-бар -->
        </StatusBar>
        <DockPanel Margin="5 0">
            <DockPanel DockPanel.Dock="Top">
                <RadioButton DockPanel.Dock="Right" Margin="0 0  5 0" VerticalAlignment="Center">HEX</RadioButton>
                <RadioButton DockPanel.Dock="Right" Margin="0 0 10 0" VerticalAlignment="Center" IsChecked="True">ASCII</RadioButton>
                <Label VerticalAlignment="Center">Ввод:</Label>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Button DockPanel.Dock="Right" Width="100" Margin="5 0 0 0" IsDefault="True"
                        x:Name="Send_BT" Click="SendMessage" FontSize="14">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="Отправить"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSending}" Value="True">
                                    <Setter Property="Content" Value="Отмена"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBox x:Name="Input_TBx" FontSize="14"  TextChanged="Input_TBx_TextChanged">
                    input
                </TextBox>
            </DockPanel>
            <TextBox Background="Transparent" BorderThickness="0" Text="{Binding ErrorMessage, Mode=OneWay}"
                     IsReadOnly="True" DockPanel.Dock="Top" FontSize="10" TextAlignment="Center" 
                     Foreground="Red" TextWrapping="Wrap"/>
            
            <DockPanel DockPanel.Dock="Top">
                <TextBlock DockPanel.Dock="Right" Margin="0 0 5 0" VerticalAlignment="Center" FontSize="11">
                    <Hyperlink Click="ClearOutput">Очистить</Hyperlink>
                </TextBlock>
                <Label VerticalAlignment="Center">Вывод:</Label>
            </DockPanel>
            <!-- FIXME: Нужна натуральная сортировка в столбце Id -->
            <!-- TODO: Добавить сброс сортировки -->
            <DataGrid x:Name="Output_DG" ItemsSource="{Binding ReceivedLines}" ScrollViewer.ScrollChanged="Output_DG_ScrollChanged"
                      IsReadOnly="True" AutoGenerateColumns="False" HorizontalGridLinesBrush="Gray" VerticalGridLinesBrush="Transparent"
                      CanUserResizeRows="False" HeadersVisibility="Column">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="#"      Width="40" Binding="{Binding Id}" CanUserSort="False"/>
                    <DataGridTextColumn Header="Время"  Width="80" Binding="{Binding TimeString}"/>
                    <DataGridTextColumn Header="Данные" Width="2*" Binding="{Binding DataString}"/>
                    <DataGridTextColumn Header="ASCII"  Width="1*" Binding="{Binding Text}"/>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </DockPanel>
</Window>
