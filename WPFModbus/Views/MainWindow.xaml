<Window x:Class="WPFModbus.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFModbus.Views"
        xmlns:helpers="clr-namespace:WPFModbus.Helpers"
        mc:Ignorable="d"
        Title="WPFModbus" 
        MinWidth="300" Width="400"
        MinHeight="300" Height="400"
        Closing="Window_Closing" 
        SourceInitialized="Window_SourceInitialized"
        SizeChanged="RecalcInputMaxHeight"
        WindowStartupLocation="Manual">
    <Window.Resources>
        <helpers:EnumToBoolConv x:Key="EnumToBoolConv"/>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top" Background="Transparent">
            <MenuItem Header="_Файл">
                <MenuItem Header="_Загрузить ввод из файла" ></MenuItem>
                <MenuItem Header="_Выход" Click="Exit_MI_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Подключение">
                <MenuItem Header="_Настройка COM порта..." Click="OpenPortSettings"/>
                <MenuItem x:Name="ConnectionSwitch_MI" Click="ConnectionSwitch_MI_Click">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="_Отключиться"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PortIsOpen}" Value="False">
                                    <Setter Property="Header" Value="_Подключиться"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Вид">
                <MenuItem Header="Авто">
                    <MenuItem.Icon>
                        <RadioButton GroupName="View" HorizontalAlignment="Center"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Компактное">
                    <MenuItem.Icon>
                        <RadioButton GroupName="View" HorizontalAlignment="Center"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Две колонки">
                    <MenuItem.Icon>
                        <RadioButton GroupName="View" HorizontalAlignment="Center"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom" Background="Transparent" Margin="5 0">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="10" Height="10" Margin="0 0 5 0">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Fill" Value="Red"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PortIsOpen}" Value="True">
                                        <Setter Property="Fill" Value="Green"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <TextBlock Text="{Binding Port.PortName}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.BaudRate}"/>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.DataBits}"/>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.Parity}"/>
            <Separator Background="LightGray"/>
            <StatusBarItem Content="{Binding Port.StopBits}"/>
            <!-- TODO: Локализировать статус-бар -->
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="70" Height="Auto" x:Name="InputGridRow"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition MinHeight="80" Height="*"/>
            </Grid.RowDefinitions>

            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Grid.Row="0" x:Name="InputSide" SizeChanged="RecalcInputMaxHeight" Margin="5 0">
                    <DockPanel DockPanel.Dock="Top">
                        <RadioButton DockPanel.Dock="Right" Margin="0 0  5 0" VerticalAlignment="Center" GroupName="SendDataType" Content="HEX"
                                     IsChecked="{Binding SendDataType, Converter={StaticResource EnumToBoolConv}, ConverterParameter=HEX}"
                                     Click="SendDataType_RB_Click"/>
                        <RadioButton DockPanel.Dock="Right" Margin="0 0 10 0" VerticalAlignment="Center" GroupName="SendDataType" Content="ASCII"
                                     IsChecked="{Binding SendDataType, Converter={StaticResource EnumToBoolConv}, ConverterParameter=ASCII}"
                                     Click="SendDataType_RB_Click"/>
                        <Label VerticalAlignment="Center">Ввод:</Label>
                    </DockPanel>
                    <StackPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <Button DockPanel.Dock="Right" Width="30" Height="30" Margin="5 0 0 0" IsDefault="True"
                                x:Name="Send_BT" Click="SendMessage" FontSize="14" VerticalAlignment="Top">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Path Data="M 0,0 L 10,5 L 0,10 Z" Fill="Black"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSending}" Value="True">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Rectangle Width="10" Height="10" Fill="Black"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBox x:Name="Input_TBx" FontSize="16" MinHeight="30" VerticalContentAlignment="Center" 
                                     TextChanged="Input_TBx_TextChanged" TextWrapping="Wrap" AcceptsReturn="True" Padding="2 0"/>
                        </DockPanel>
                        <TextBox Background="Transparent" BorderThickness="0" Text="{Binding ErrorMessage, Mode=OneWay}"
                             IsReadOnly="True" DockPanel.Dock="Top" FontSize="10" TextAlignment="Center" 
                             Foreground="Red" TextWrapping="Wrap" Width="Auto"/>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>

            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                          ResizeDirection="Rows" Height="9" PreviewMouseUp="CheckMaxSize" Background="Transparent"/>
            <Separator Margin="5 0" Grid.Row="1" Background="LightGray" VerticalAlignment="Top" IsHitTestVisible="False"/>

            <DockPanel Grid.Row="2" Margin="5 0">
                <DockPanel DockPanel.Dock="Top">
                    <TextBlock DockPanel.Dock="Right" Margin="0 0 5 0" VerticalAlignment="Center" FontSize="11">
                            <Hyperlink Click="ClearOutput">Очистить</Hyperlink>
                    </TextBlock>
                    <Label VerticalAlignment="Center">Вывод:</Label>
                </DockPanel>
                <!-- FIXME: Нужна натуральная сортировка в столбце Id -->
                <!-- TODO: Добавить сброс сортировки -->
                <DataGrid x:Name="Output_DG" ItemsSource="{Binding ReceivedLines}" ScrollViewer.ScrollChanged="Output_DG_ScrollChanged"
                              IsReadOnly="True" AutoGenerateColumns="False" HorizontalGridLinesBrush="Gray" VerticalGridLinesBrush="Transparent"
                              CanUserResizeRows="False" HeadersVisibility="Column" BorderBrush="#abadb3">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#"      Width="40" Binding="{Binding Id}" CanUserSort="False"/>
                        <DataGridTextColumn Header="Время"  Width="80" Binding="{Binding TimeString}"/>
                        <DataGridTextColumn Header="Данные" Width="2*" Binding="{Binding DataString}"/>
                        <DataGridTextColumn Header="ASCII"  Width="1*" Binding="{Binding Text}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </Grid>
    </DockPanel>
</Window>
